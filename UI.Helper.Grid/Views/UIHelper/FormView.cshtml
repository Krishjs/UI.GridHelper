@model List<CityDataSource.City>
<script type="text/javascript">
    function DisplayJSON() {
        debugger;
        $.fn.serializeArray = function (options) {
            var o = $.extend({ checkboxesAsBools: false }, options || {});

            var rselectTextarea = /select|textarea/i;
            var rinput = /text|hidden|password|search/i;

            return this.map(function () { return this.elements ? $.makeArray(this.elements) : this; })
            .filter(function () {
                return this.name && !this.disabled &&
                    (this.checked
                    || (o.checkboxesAsBools && this.type === 'checkbox')
                    || rselectTextarea.test(this.nodeName)
                    || rinput.test(this.type));
            })
                .map(function (i, elem) {
                    var val = $(this).val();
                    return val == null ?
                    null :
                    $.isArray(val) ?
                    $.map(val, function (val, i) {
                        return { name: elem.name, value: val };
                    }) :
            {
                name: elem.name,
                value: (o.checkboxesAsBools && this.type === 'checkbox') ? //moar ternaries!
                    (this.checked ? 'true' : 'false') :
                    val
            };
                }).get();
        };
        $.fn.serializeFormJSON = function () {
            var o = {};
            var $form = this.not('input:checkbox:not(:checked)').not('input:radio:not(:checked)');
            var a = this.serializeArray({ checkboxesAsBools: true});
            $.each(a, function () {
                if (this.type === 'checkbox' && this.value) { }
                if (o[this.name]) {
                    if (!o[this.name].push) {
                        o[this.name] = [o[this.name]];
                    }
                    o[this.name].push(this.value || '');
                } else {
                    o[this.name] = this.value || '';
                }
            });
            return o;
        };
        var formdata = $('#formjson input').serializeFormJSON();

        $.post("/UIHelper/SendJson", formdata, function (result) {
            $('#display').val(JSON.stringify(result));
        });
    }
</script>

<div id="formjson">
    @using (Html.BeginForm("FormSubmit", "UIHelper", FormMethod.Post))
    {
        for (int i = 0; i < Model.Count; i++)
        {
            <div class="col-xs-3"> @Html.OVTextBoxFor(m => m[i].Code) @Html.OVCheckBoxFor(m=>m[i].IsSelected)</div>
            <div class="col-xs-3"> @Html.OVTextBoxFor(m => m[i].Name) </div>
            <div class="col-xs-3"> @Html.OVComboBoxFor(m => m[i].StateInfo, new ComboBoxSettings() { Custom = true, ValueField = "Id", TextField = "Name", ControllerName = "UIHelper", MethodName = "GetStatesWithPagination" }) </div>
            <div class="col-xs-3"> @Html.OVTextBoxFor(m => m[i].StateInfo.CountryInfo.Code) </div>
            for (int j = 0; j < Model[i].ZipCodes.Count; j++)
            {
                <div class="col-xs-3"> @Html.OVTextBoxFor(m => m[i].ZipCodes[j].CityZip) </div>
            }
            <div class="col-xs-12 margintop28">&nbsp;</div>
        }
        <div class="col-xs-12"> <input class="pull-right" type="button" name="sub" value="Submit" onclick="DisplayJSON()" /> </div>
    }
</div>
<div class="col-xs-12 margintop10">&nbsp;</div>
<div class="col-xs-12"> <textarea id="display"></textarea> </div>
